import Head from 'next/head'
import {useEffect, useState} from "react"
import CryptoList from '../components/cryptoList'

import { resetServerContext } from 'react-beautiful-dnd';
import { DragDropContext } from 'react-beautiful-dnd';

import Alert from '@mui/material/Alert';
import AlertTitle from '@mui/material/AlertTitle';
import Stack from '@mui/material/Stack';
import Button from '@mui/material/Button';
import Typography from '@mui/material/Typography';
import Container from '@mui/material/Container';



export default function Home({ data }) {

  const correctOrder=([
    {
        name:"btc",
        id:"btc"
    },
    {
        name:"eth",
        id:"eth"
    },
    {
      name:"bnb",
      id:"bnb"
    },
    {
      name:"matic",
      id:"matic"
    },
    {
        name:"ltc",
        id:"ltc"
    }
    
    
  ])

  const [popupMessage, setPopupMessage] = useState(null)

  const [orderedList, setOrderedList]= useState([
    {
        name:"btc",
        id:"btc"
    },
    {
        name:"eth",
        id:"eth"
    },
    {
        name:"ltc",
        id:"ltc"
    },
    {
        name:"bnb",
        id:"bnb"
    },
    {
        name:"matic",
        id:"matic"
    }
  ])
  

  const handleOnDragEnd = (result)=>{
    const coins = Array.from(orderedList);
    const [reorderList] = coins.splice(result.source.index, 1)
    coins.splice(result.destination.index, 0, reorderList)
    setOrderedList(coins)
  }



  const handleCheckOrder = (e, orderedList, correctOrder) =>{
    e.preventDefault();
    let counter = 0;
    correctOrder.forEach((order, index )=>{
      if (order.name === orderedList[index].name){
        counter+=1;
      }else{
        setPopupMessage(false)
      }
      if(counter === correctOrder.length){
        setPopupMessage(true)
      }
    })
  }


  return (
    <div >
      <Head>
        <title>Can You Order The List?</title>
        <meta name="description" content="Generated by dez nuts" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container maxWidth="xs" sx={{textAlign:"center", height:"100vh", display:"flex", flexDirection:"column",justifyContent:"center"}}>

        
        
        <Typography variant="h2"  color="secondary">
          Order The Projects
        </Typography>



        
        <DragDropContext onDragEnd={handleOnDragEnd}>
          <CryptoList orderedList={orderedList} setOrderedList={setOrderedList}/>
        </DragDropContext>
          
        
        
        

        <Button onClick={e => handleCheckOrder(e, orderedList, correctOrder)} variant="contained" color="secondary">Check Order</Button>
        <br />
        {
          (popupMessage===true)?
          <Stack sx={{ width: '100%' }} spacing={2}>
            <Alert severity="success">
              
              Congrats — <strong>You won!</strong>
            </Alert>
          </Stack>
          :
          <>
          {
            (popupMessage===false)?
            <>
              <Stack sx={{ width: '100%' }} spacing={2}>
                <Alert severity="error">
                  
                  Wrong — <strong>You lost!</strong>
                </Alert>
              </Stack>
            </>:
            <></>
            
          }
          </>
        }
      </Container>

      

      
    </div>
  )
}

export const getServerSideProps = async ({ query }) => {

  resetServerContext()   
  
  return {props: { data : []}}


}
